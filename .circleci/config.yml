version: 2.1

jobs:
  halt:
    docker:
      - image: cimg/node:18.16.0
    resource_class: small
    parallelism: 3
    steps:
      - checkout
      - run:
          name: some operation
          command: |
            # sleep 10s x $CIRCLE_NODE_INDEX env var
            # NOTE: $CIRCLE_NODE_INDEX is zero-based
            sleep $((($CIRCLE_NODE_INDEX + 1) * 3))
      # - run:
      #     name: one node marking job as done
      #     command: |
      #       if [ 1 -eq $CIRCLE_NODE_INDEX ]; then
      #         circleci-agent step halt
      #       else
      #         echo "running some more steps!"
      #         sleep 10
      #       fi
      - run:
          name: halt accordingly
          command: |
            node halt.js
            # circleci-agent step halt will continue the same commands within the run step.
            # It’s essentially: halt the remaining steps in this job, but current step’s remaining commands will run.
            echo "NOTE: this command is still run..."
            sleep 3
            echo "NOTE: this too, including the sleep earlier"
      - run:
          name: fail intentionally
          command: |
            exit 1

workflows:
  mark-job-succeed:
    jobs:
      - halt
